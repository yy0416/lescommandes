{% extends 'base.html.twig' %}

{% block title %}结算
{% endblock %}

{% block stylesheets %}
	{{ parent() }}
	<style>
		.form-control.is-invalid {
			border-color: #dc3545;
			padding-right: calc(1.5em + 0.75rem);
			background-image: url("data:image/svg+xml, %3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
			background-repeat: no-repeat;
			background-position: right calc(0.375em + 0.1875rem) center;
			background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
		}
		.invalid-feedback {
			display: none;
			color: #dc3545;
			font-size: 0.75em;
			margin-top: 0.25rem;
		}
		.form-control.is-invalid ~ .invalid-feedback {
			display: block;
		}
		.validation-error {
			color: #dc3545;
			font-size: 0.75em;
			margin-top: 1rem;
			padding: 0.5rem;
			background-color: #fff;
			border: 1px solid #dc3545;
			border-radius: 4px;
		}
		.btn-custom {
			background-color: #f5f5f5;
			border-color: #ddd;
			color: #333;
		}
		.btn-custom:hover {
			background-color: #e9e9e9;
			border-color: #ccc;
			color: #333;
		}
		.card {
			border-color: #ddd;
		}
		.card-header {
			background-color: #f5f5f5;
			border-bottom-color: #ddd;
		}
		.checkout-actions {
			display: flex;
			justify-content: space-between;
			align-items: center;
			margin-top: 2rem;
		}
	</style>
{% endblock %}

{% block body %}
	<div
		class="container mt-4">
		{# 显示错误信息 #}
		{% for message in app.flashes('error') %}
			<div class="alert alert-danger">
				{{ message }}
			</div>
		{% endfor %}

		<h1 class="mb-4">订单结算</h1>

		<div class="row">
			<div class="col-md-8">
				<div class="card mb-4">
					<div class="card-body">
						<h5 class="card-title">收货信息</h5>
						{{ form_start(form, {
							'attr': {
								'class': 'needs-validation',
								'novalidate': 'novalidate',
								'id': 'checkout-form',
								'data-turbo': 'false'
							}
						}) }}
						<div class="row">
							<div class="col-md-6">
								{{ form_label(form.customerName) }}
								{{ form_widget(form.customerName, {'attr': {'class': 'form-control'}}) }}
								<div class="invalid-feedback">
									{{ form_errors(form.customerName) }}
								</div>
							</div>
							<div class="col-md-6">
								{{ form_label(form.phone) }}
								{{ form_widget(form.phone, {'attr': {'class': 'form-control'}}) }}
								<div class="invalid-feedback">
									{{ form_errors(form.phone) }}
								</div>
							</div>
						</div>
						<div class="row">
							<div class="col-md-6">
								{{ form_label(form.email) }}
								{{ form_widget(form.email, {'attr': {'class': 'form-control'}}) }}
								<div class="invalid-feedback">
									{{ form_errors(form.email) }}
								</div>
							</div>
							<div class="col-md-6">
								{{ form_label(form.pickupLocation) }}
								{{ form_widget(form.pickupLocation, {'attr': {'class': 'form-control'}}) }}
								<div class="invalid-feedback">
									{{ form_errors(form.pickupLocation) }}
								</div>
							</div>
						</div>
						<div class="row">
							<div class="col-md-6">
								{{ form_label(form.pickupTime) }}
								{{ form_widget(form.pickupTime, {'attr': {'class': 'form-control'}}) }}
								<div class="invalid-feedback">
									{{ form_errors(form.pickupTime) }}
								</div>
							</div>
						</div>
						<button type="submit" class="btn btn-primary">{{ 'checkout.place_order'|trans }}</button>
						{{ form_end(form) }}
					</div>
				</div>
			</div>

			<div class="col-md-4">
				<div class="card">
					<div class="card-body">
						<h5 class="card-title">订单明细</h5>
						{% for item in cart %}
							<div class="d-flex justify-content-between mb-2">
								<span>{{ item.product.name }}
									x
									{{ item.quantity }}</span>
								<span>€{{ item.subtotal }}</span>
							</div>
						{% endfor %}
						<hr>
						<div class="d-flex justify-content-between">
							<strong>总计:</strong>
							<strong>€{{ total }}</strong>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
{% endblock %}

{% block javascripts %}
	{{ parent() }}
	<script>
		document.addEventListener('DOMContentLoaded', function () {
const form = document.getElementById('checkout-form');
const phoneInput = form.querySelector('input[name$="[phone]"]');
const emailInput = form.querySelector('input[name$="[email]"]');

// 手机号验证（支持国际格式）
phoneInput.addEventListener('input', function () {
const phonePattern = new RegExp(this.dataset.pattern);
if (! phonePattern.test(this.value)) {
this.classList.add('is-invalid');
} else {
this.classList.remove('is-invalid');
}
});

// 邮箱验证
emailInput.addEventListener('input', function () {
const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
if (! emailPattern.test(this.value)) {
this.classList.add('is-invalid');
} else {
this.classList.remove('is-invalid');
}
});

// 表单提交验证
form.addEventListener('submit', function (event) {
let isValid = true;

// 验证手机号
const phonePattern = new RegExp(phoneInput.dataset.pattern);
if (! phonePattern.test(phoneInput.value)) {
phoneInput.classList.add('is-invalid');
isValid = false;
}

// 验证邮箱
const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
if (! emailPattern.test(emailInput.value)) {
emailInput.classList.add('is-invalid');
isValid = false;
}

// 如果验证失败，阻止表单提交
if (! isValid) {
event.preventDefault();
event.stopPropagation();
}
});

// 处理表单提交错误
form.addEventListener('formSubmissionErrored', function (event) {
const errors = event.detail.errors;
if (errors) { // 显示错误消息
Object.keys(errors).forEach(field => {
const input = form.querySelector (`[name$="[${field}]"]`);
if (input) {
input.classList.add('is-invalid');
const feedback = input.nextElementSibling;
if (feedback && feedback.classList.contains('invalid-feedback')) {
feedback.textContent = errors[field];
}
}
});
}
});
});
	</script>
{% endblock %}
